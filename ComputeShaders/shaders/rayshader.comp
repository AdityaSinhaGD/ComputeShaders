#version 430 compatibility

uniform vec3 rayOrigin;
uniform vec3 spherePosition; 
uniform float sphereRadius;

layout (std430, binding = 4) buffer Pos
{
	vec4 Positions [ ];
};



layout (std430, binding = 6) buffer Col 
{
	vec4 Colors [ ];
};



layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;


void main()
{
	const vec3 G = vec3 (0.0f, -9.8f, 0.0f);
	uint g_id = gl_GlobalInvocationID.x;

	vec3 pos = Positions[g_id].xyz;
	vec3 color = Colors[g_id].xyz;

	vec3 u = normalize(pos-rayOrigin);
	vec3 o_c = (rayOrigin - spherePosition);

	float detr1 = pow(dot(u,o_c),2);
	float detr2 = pow(o_c.length,2) - pow(sphereRadius,2);

	float det = detr1-detr2;
	if(det>0)
	{
		Colors[g_id].xyz = vec3(0.5f,0.0f,0.0f);
	}else{

		Colors[g_id].xyz = color;
	}
}

